name: reviewdog
on: [pull_request_target]

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}


  pr-acc-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ">=1.16"

      - run: |
          all_files=$(git diff ${{github.base_ref}} ${{github.head_ref}} --name-only huaweicloud | grep -v "_test.go")
          for f in $all_files; do
              path=${f%/*}
              if [ "$path" != "huaweicloud" ]; then
                  # update path to "huaweicloud/services/acceptance/xxx"
                  path=${path/services/services\/acceptance}
              fi

              org_file=${f##*/}
              test_file=$path/${org_file/%.go/_test.go}

              if [ -f "./${test_file}" ]; then
                  basic_cases=$(grep "^func TestAcc" ./${test_file} | grep _basic | awk '{print $2}' | awk -F '(' '{print $1}')
                  if [ "X$basic_cases" != "X" ]; then
                      echo -e "\n\`\`\` \nrun acceptance basic tests: $basic_cases"
                      make testacc TEST="./$path" TESTARGS="-run ${basic_cases}"
                      echo "\`\`\`"
                  fi
              else
                  echo -e "[skipped] --- ./${test_file} does not exist"
              fi
          done

      # - run: scripts/prAccTest.sh ${{github.base_ref}} ${{github.head_ref}} #> pr-acc-test.log
      #   env:
      #     HW_ACCESS_KEY: ${{ secrets.HW_ACCESS_KEY }}
      #     HW_SECRET_KEY: ${{ secrets.HW_SECRET_KEY }}
      #     HW_REGION_NAME: cn-north-4
      #     HW_ENTERPRISE_PROJECT_ID: "0"

      # - id: get-comment-body
      #   run: |
      #     body="$(cat pr-acc-test.log)"
      #     body="${body//'%'/'%25'}"
      #     body="${body//$'\n'/'%0A'}"
      #     body="${body//$'\r'/'%0D'}" 
      #     echo "::set-output name=body::$body"

      # - name: Create comment
      #   uses: peter-evans/create-or-update-comment@v2
      #   with:
      #     issue-number: 1
      #     body: ${{ steps.get-comment-body.outputs.body }}
      #     reactions: '+1'    
    
